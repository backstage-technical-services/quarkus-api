name: Build

on:
  push:
    branches:
      - github-migration
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install GraalVM
        uses: rinx/setup-graalvm-ce@v0.0.3
        with:
          graalvm-version: "19.3.1"
          java-version: "java11"
          native-image: "false"
      - name: Restore dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-v1-${{ hashFiles('build.gradle') }}
          path: |
            build
            .gradle
          restore-keys: |
            ${{ runner.os }}-v1-
            ${{ runner.os }}
      - name: Build app
        run: ./gradlew --build-cache assemble
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false"
          GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

  test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Install GraalVM
        uses: rinx/setup-graalvm-ce@v0.0.3
        with:
          graalvm-version: "19.3.1"
          java-version: "java11"
          native-image: "false"
      - name: Restore dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-v1-${{ hashFiles('build.gradle') }}
          path: |
            build
            .gradle
          restore-keys: |
            ${{ runner.os }}-v1-
            ${{ runner.os }}
      - name: Run tests
        run: ./gradlew test
      - name: Save test report
        uses: actions/upload-artifact@v1
        with:
          name: test-report
          path: build/test-results/test

  test-docker-image:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Restore dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-v1-${{ hashFiles('build.gradle') }}
          path: |
            build
            .gradle
          restore-keys: |
            ${{ runner.os }}-v1-
            ${{ runner.os }}
      - name: Test image
        run: |
          scripts/build_image.sh 1> /dev/null
          scripts/test_container.sh
